<?xml version="1.0"?>
<ruleset name="Ork">

    <description>The Ork coding standard.</description>

    <arg value="p"/>
    <arg value="s"/>

    <arg name="cache" value=".phpcs-cache"/>
    <arg name="colors"/>
    <arg name="encoding" value="utf-8"/>
    <arg name="report" value="full"/>
    <arg name="report-width" value="132"/>

    <!-- Generic -->
    <rule ref="Generic.Arrays.ArrayIndent"/>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <!-- <rule ref="Generic.Arrays.DisallowShortArraySyntax"/> -->
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <!-- <rule ref="Generic.Classes.OpeningBraceSameLine"/> -->
    <!-- <rule ref="Generic.CodeAnalysis.AssignmentInCondition"/> -->
    <rule ref="Generic.CodeAnalysis.EmptyPHPStatement"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement">
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCATCH"/>
    </rule>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.RequireExplicitBooleanOperatorPrecedence"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Commenting.DocComment"/>
    <rule ref="Generic.Commenting.Fixme"/>
    <rule ref="Generic.Commenting.Todo"/>
    <rule ref="Generic.ControlStructures.DisallowYodaConditions"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <!-- <rule ref="Generic.Debug.ClosureLinter"/> -->
    <!-- <rule ref="Generic.Debug.CSSLint"/> -->
    <!-- <rule ref="Generic.Debug.ESLint"/> -->
    <!-- <rule ref="Generic.Debug.JSHint"/> -->
    <rule ref="Generic.Files.ByteOrderMark"/>
    <!-- <rule ref="Generic.Files.EndFileNewline"/> -->
    <!-- <rule ref="Generic.Files.EndFileNoNewline"/> -->
    <rule ref="Generic.Files.ExecutableFile"/>
    <rule ref="Generic.Files.InlineHTML"/>
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>
    </rule>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="132"/>
        </properties>
    </rule>
    <!-- <rule ref="Generic.Files.LowercasedFilename"/> -->
    <rule ref="Generic.Files.OneClassPerFile"/>
    <rule ref="Generic.Files.OneInterfacePerFile"/>
    <rule ref="Generic.Files.OneObjectStructurePerFile"/>
    <rule ref="Generic.Files.OneTraitPerFile"/>
    <!-- <rule ref="Generic.Formatting.DisallowMultipleStatements"/> -->
    <!-- <rule ref="Generic.Formatting.MultipleStatementAlignment"/> -->
    <!-- <rule ref="Generic.Formatting.NoSpaceAfterCast"/> -->
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <!-- <rule ref="Generic.Formatting.SpaceBeforeCast"/> -->
    <!-- <rule ref="Generic.Formatting.SpaceAfterNot"/> -->
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <!-- <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/> -->
    <!-- <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/> -->
    <rule ref="Generic.Metrics.CyclomaticComplexity"/>
    <rule ref="Generic.Metrics.NestingLevel"/>
    <rule ref="Generic.NamingConventions.AbstractClassNamePrefix"/>
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.InterfaceNameSuffix"/>
    <rule ref="Generic.NamingConventions.TraitNameSuffix"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.BacktickOperator"/>
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
    <!-- <rule ref="Generic.PHP.ClosingPHPTag"/> -->
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowAlternativePHPTags"/>
    <rule ref="Generic.PHP.DisallowRequestSuperglobal"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.DiscourageGoto"/>
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array" value="eval=>null,exec=>null,shell_exec=>null,sizeof=>count,delete=>unset,print=>echo,create_function=>null"/>
        </properties>
    </rule>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.PHP.LowerCaseType"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <!-- <rule ref="Generic.PHP.RequireStrictTypes"/> -->
    <rule ref="Generic.PHP.SAPIUsage"/>
    <rule ref="Generic.PHP.Syntax"/>
    <!-- <rule ref="Generic.PHP.UpperCaseConstant"/> -->
    <rule ref="Generic.Strings.UnnecessaryStringConcat"/>
    <!-- <rule ref="Generic.VersionControl.SubversionProperties"/> -->
    <rule ref="Generic.VersionControl.GitMergeConflict"/>
    <!-- <rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/> -->
    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic.WhiteSpace.IncrementDecrementSpacing"/>
    <rule ref="Generic.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent"/>
    <rule ref="Generic.WhiteSpace.SpreadOperatorSpacingAfter"/>

    <!-- MySource -->
    <!-- <rule ref="MySource.CSS.BrowserSpecificStyles"/> -->
    <!-- <rule ref="MySource.Channels.DisallowSelfActions"/> -->
    <!-- <rule ref="MySource.Channels.IncludeOwnSystem"/> -->
    <!-- <rule ref="MySource.Channels.IncludeSystem"/> -->
    <!-- <rule ref="MySource.Channels.UnusedSystem"/> -->
    <!-- <rule ref="MySource.Commenting.FunctionComment"/> -->
    <!-- <rule ref="MySource.Debug.DebugCode"/> -->
    <!-- <rule ref="MySource.Debug.FirebugConsole"/> -->
    <!-- <rule ref="MySource.Objects.AssignThis"/> -->
    <!-- <rule ref="MySource.Objects.CreateWidgetTypeCallback"/> -->
    <!-- <rule ref="MySource.Objects.DisallowNewWidget"/> -->
    <!-- <rule ref="MySource.PHP.AjaxNullComparison"/> -->
    <!-- <rule ref="MySource.PHP.EvalObjectFactory"/> -->
    <!-- <rule ref="MySource.PHP.GetRequestData"/> -->
    <!-- <rule ref="MySource.PHP.ReturnFunctionValue"/> -->
    <!-- <rule ref="MySource.Strings.JoinStrings"/> -->

    <!-- PEAR -->
    <rule ref="PEAR.Classes.ClassDeclaration">
        <exclude name="PEAR.Classes.ClassDeclaration.OpenBraceNewLine"/>
    </rule>
    <!-- <rule ref="PEAR.Commenting.ClassComment"/> -->
    <!-- <rule ref="PEAR.Commenting.FileComment"/> -->
    <!-- <rule ref="PEAR.Commenting.FunctionComment"/> -->
    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.ControlStructures.ControlSignature"/>
    <!-- <rule ref="PEAR.ControlStructures.MultiLineCondition"/> -->
    <rule ref="PEAR.Files.IncludingFile"/>
    <!-- <rule ref="PEAR.Formatting.MultiLineAssignment"/> -->
    <!-- <rule ref="PEAR.Functions.FunctionCallSignature"/> -->
    <!-- <rule ref="PEAR.Functions.FunctionDeclaration"/> -->
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
    <rule ref="PEAR.NamingConventions.ValidFunctionName">
        <exclude name="PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="PEAR.NamingConventions.ValidVariableName">
        <exclude name="PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
    <!-- <rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/> -->
    <!-- <rule ref="PEAR.WhiteSpace.ScopeIndent"/> -->

    <!-- PSR-1 -->
    <rule ref="PSR1.Classes.ClassDeclaration"/>
    <rule ref="PSR1.Files.SideEffects"/>
    <rule ref="PSR1.Methods.CamelCapsMethodName"/>

    <!-- PSR-2 -->
    <!-- <rule ref="PSR2.Classes.ClassDeclaration"/> -->
    <rule ref="PSR2.Classes.PropertyDeclaration"/>
    <!-- <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/> -->
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
    <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>
    <rule ref="PSR2.Files.ClosingTag"/>
    <rule ref="PSR2.Files.EndFileNewline"/>
    <!-- <rule ref="PSR2.Methods.FunctionCallSignature"/> -->
    <!-- <rule ref="PSR2.Methods.FunctionClosingBrace"/> -->
    <rule ref="PSR2.Methods.MethodDeclaration"/>
    <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
    <rule ref="PSR2.Namespaces.UseDeclaration"/>

    <!-- PSR-12 -->
    <rule ref="PSR12.Classes.AnonClassDeclaration"/>
    <rule ref="PSR12.Classes.ClassInstantiation"/>
    <rule ref="PSR12.Classes.ClosingBrace"/>
    <!-- <rule ref="PSR12.Classes.OpeningBraceSpace"/> -->
    <rule ref="PSR12.ControlStructures.BooleanOperatorPlacement"/>
    <rule ref="PSR12.ControlStructures.ControlStructureSpacing"/>
    <rule ref="PSR12.Files.DeclareStatement"/>
    <rule ref="PSR12.Files.FileHeader"/>
    <rule ref="PSR12.Files.ImportStatement"/>
    <rule ref="PSR12.Files.OpenTag"/>
    <rule ref="PSR12.Functions.NullableTypeDeclaration"/>
    <rule ref="PSR12.Functions.ReturnTypeDeclaration"/>
    <rule ref="PSR12.Keywords.ShortFormTypeKeywords"/>
    <rule ref="PSR12.Namespaces.CompoundNamespaceDepth"/>
    <rule ref="PSR12.Operators.OperatorSpacing"/>
    <rule ref="PSR12.Properties.ConstantVisibility"/>
    <!-- <rule ref="PSR12.Traits.UseDeclaration"/> -->

    <!-- Zend -->
    <!-- <rule ref="Zend.Debug.CodeAnalyzer"/> -->
    <rule ref="Zend.Files.ClosingTag"/>
    <!-- <rule ref="Zend.NamingConventions.ValidVariableName"/> -->

    <!-- Squiz -->
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.Arrays.ArrayDeclaration">
        <exclude name="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned"/>
    </rule>
    <rule ref="Squiz.Classes.ClassDeclaration"/>
    <rule ref="Squiz.Classes.ClassFileName"/>
    <rule ref="Squiz.Classes.DuplicateProperty"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>
    <rule ref="Squiz.Classes.SelfMemberReference"/>
    <rule ref="Squiz.Classes.ValidClassName"/>
    <rule ref="Squiz.Commenting.BlockComment">
        <exclude name="Squiz.Commenting.BlockComment.WrongStart"/>
    </rule>
    <rule ref="Squiz.Commenting.ClassComment">
        <exclude name="Squiz.Commenting.ClassComment.TagNotAllowed"/>
    </rule>
    <!-- <rule ref="Squiz.Commenting.ClosingDeclarationComment"/> -->
    <rule ref="Squiz.Commenting.DocCommentAlignment"/>
    <rule ref="Squiz.Commenting.EmptyCatchComment"/>
    <!-- <rule ref="Squiz.Commenting.FileComment"/> -->
    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName"/>
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturn"/>
        <exclude name="Squiz.Commenting.FunctionComment.Missing"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamTag"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingReturn"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamName"/>
    </rule>
    <rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>
    <rule ref="Squiz.Commenting.InlineComment">
        <exclude name="Squiz.Commenting.InlineComment.DocBlock"/>
    </rule>
    <!-- <rule ref="Squiz.Commenting.LongConditionClosingComment"/> -->
    <rule ref="Squiz.Commenting.PostStatementComment"/>
    <rule ref="Squiz.Commenting.VariableComment">
        <exclude name="Squiz.Commenting.VariableComment.IncorrectVarType"/>
        <exclude name="Squiz.Commenting.VariableComment.Missing"/>
        <exclude name="Squiz.Commenting.VariableComment.MissingVar"/>
    </rule>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <!-- <rule ref="Squiz.ControlStructures.ElseIfDeclaration"/> -->
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.InlineIfDeclaration">
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.NoBrackets"/>
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.NotSingleLine"/>
    </rule>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration">
        <exclude name="Squiz.ControlStructures.SwitchDeclaration.BreakIndent"/>
    </rule>
    <!-- <rule ref="Squiz.CSS.ClassDefinitionClosingBraceSpace"/> -->
    <!-- <rule ref="Squiz.CSS.ClassDefinitionNameSpacing"/> -->
    <!-- <rule ref="Squiz.CSS.ClassDefinitionOpeningBraceSpace"/> -->
    <!-- <rule ref="Squiz.CSS.ColonSpacing"/> -->
    <!-- <rule ref="Squiz.CSS.ColourDefinition"/> -->
    <!-- <rule ref="Squiz.CSS.DisallowMultipleStyleDefinitions"/> -->
    <!-- <rule ref="Squiz.CSS.DuplicateClassDefinition"/> -->
    <!-- <rule ref="Squiz.CSS.DuplicateStyleDefinition"/> -->
    <!-- <rule ref="Squiz.CSS.EmptyClassDefinition"/> -->
    <!-- <rule ref="Squiz.CSS.EmptyStyleDefinition"/> -->
    <!-- <rule ref="Squiz.CSS.ForbiddenStyles"/> -->
    <!-- <rule ref="Squiz.CSS.Indentation"/> -->
    <!-- <rule ref="Squiz.CSS.LowercaseStyleDefinition"/> -->
    <!-- <rule ref="Squiz.CSS.MissingColon"/> -->
    <!-- <rule ref="Squiz.CSS.NamedColours"/> -->
    <!-- <rule ref="Squiz.CSS.Opacity"/> -->
    <!-- <rule ref="Squiz.CSS.SemicolonSpacing"/> -->
    <!-- <rule ref="Squiz.CSS.ShorthandSize"/> -->
    <!-- <rule ref="Squiz.Debug.JavaScriptLint"/> -->
    <!-- <rule ref="Squiz.Debug.JSLint"/> -->
    <!-- <rule ref="Squiz.Files.FileExtension"/> -->
    <!-- <rule ref="Squiz.Formatting.OperatorBracket"/> -->
    <!-- <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing"/> -->
    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <rule ref="Squiz.Functions.FunctionDuplicateArgument"/>
    <rule ref="Squiz.Functions.GlobalFunction"/>
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>
    <rule ref="Squiz.NamingConventions.ValidFunctionName">
        <exclude name="Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="Squiz.NamingConventions.ValidVariableName">
        <exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="Squiz.Objects.DisallowObjectStringIndex"/>
    <rule ref="Squiz.Objects.ObjectInstantiation">
        <exclude name="Squiz.Objects.ObjectInstantiation.NotAssigned"/>
    </rule>
    <rule ref="Squiz.Objects.ObjectMemberComma"/>
    <!-- <rule ref="Squiz.Operators.ComparisonOperatorUsage"/> -->
    <rule ref="Squiz.Operators.IncrementDecrementUsage"/>
    <rule ref="Squiz.Operators.ValidLogicalOperators"/>
    <rule ref="Squiz.PHP.CommentedOutCode"/>
    <!-- <rule ref="Squiz.PHP.DisallowBooleanStatement"/> -->
    <!-- <rule ref="Squiz.PHP.DisallowComparisonAssignment"/> -->
    <!-- <rule ref="Squiz.PHP.DisallowInlineIf"/> -->
    <rule ref="Squiz.PHP.DisallowMultipleAssignments"/>
    <!-- <rule ref="Squiz.PHP.DisallowObEndFlush"/> -->
    <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
    <rule ref="Squiz.PHP.DiscouragedFunctions"/>
    <rule ref="Squiz.PHP.EmbeddedPhp"/>
    <!-- <rule ref="Squiz.PHP.Eval"/> -->
    <!-- <rule ref="Squiz.PHP.ForbiddenFunctions"/> -->
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.Heredoc"/>
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.Strings.DoubleQuoteUsage"/>
    <rule ref="Squiz.Strings.EchoedStrings"/>
    <rule ref="Squiz.WhiteSpace.CastSpacing"/>
    <!-- <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/> -->
    <!-- <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace"/> -->
    <!-- <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/> -->
    <rule ref="Squiz.WhiteSpace.FunctionSpacing">
        <properties>
            <property name="spacing" value="1"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing"/>
    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
        <exclude name="Squiz.WhiteSpace.ObjectOperatorSpacing.Before"/>
    </rule>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.PropertyLabelSpacing"/>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

</ruleset>
